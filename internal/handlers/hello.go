/*
Copyright Â© 2019-2020 Netskope
*/

// TODO :: Rename file/struct/interface/methods to match your service

package handlers

import (
	"context"

	"github.com/netskope/go-kestrel/pkg/log"

	google_empty "google.golang.org/protobuf/types/known/emptypb"

	apis "github.com/netskope/piratetreasure/api/proto/piratetreasure"
)

var helloLogger = log.NewLogger("HelloWorldServiceHandler")

//HelloWorldServiceHandler wraps the HelloWorldServiceServer generated by protoc
//and adds handler specific needs, when applicable
type HelloWorldServiceHandler interface {
	apis.HelloWorldServiceServer
}

//helloWorld implements HelloWorldServiceHandler
type helloWorld struct {
	apis.UnimplementedHelloWorldServiceServer
}

// NewHelloWorldServiceHandler creates a new HelloWorldServiceHandler
func NewHelloWorldServiceHandler(ctx context.Context) HelloWorldServiceHandler {
	h := helloWorld{}
	helloLogger.Info("Starting ...")
	return &h
}

// SayHello is our service implementation
func (h *helloWorld) SayHello(ctx context.Context, e *google_empty.Empty) (*apis.HelloResponse, error) {
	return &apis.HelloResponse{
		Hello: "Hello World!",
	}, nil
}
